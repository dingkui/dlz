<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dlz.commbiz.dict.dao.BaseSetMapper" >
  <resultMap id="BaseResultMap" type="com.dlz.commbiz.dict.model.BaseSet" >
    <id column="BASE_CODE" property="baseCode" jdbcType="VARCHAR" />
    <result column="BASE_VALUE" property="baseValue" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_ID" property="createId" jdbcType="DECIMAL" />
    <result column="CREATE_NAME" property="createName" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_ID" property="updateId" jdbcType="DECIMAL" />
    <result column="UPDATE_NAME" property="updateName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BASE_CODE, BASE_VALUE, STATUS, CREATE_TIME, CREATE_ID, CREATE_NAME, REMARKS, UPDATE_TIME, 
    UPDATE_ID, UPDATE_NAME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dlz.commbiz.dict.model.BaseSetCriteria" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_B_BASE_SET
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from T_B_BASE_SET
    where BASE_CODE = #{baseCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" >
    delete from T_B_BASE_SET
    where BASE_CODE = #{baseCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dlz.commbiz.dict.model.BaseSetCriteria" >
    delete from T_B_BASE_SET
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dlz.commbiz.dict.model.BaseSet" >
    insert into T_B_BASE_SET (BASE_CODE, BASE_VALUE, STATUS, 
      CREATE_TIME, CREATE_ID, CREATE_NAME, 
      REMARKS, UPDATE_TIME, UPDATE_ID, 
      UPDATE_NAME)
    values (#{baseCode,jdbcType=VARCHAR}, #{baseValue,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=DECIMAL}, #{createName,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=DECIMAL}, 
      #{updateName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dlz.commbiz.dict.model.BaseSet" >
    insert into T_B_BASE_SET
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="baseCode != null" >
        BASE_CODE,
      </if>
      <if test="baseValue != null" >
        BASE_VALUE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createId != null" >
        CREATE_ID,
      </if>
      <if test="createName != null" >
        CREATE_NAME,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateId != null" >
        UPDATE_ID,
      </if>
      <if test="updateName != null" >
        UPDATE_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="baseCode != null" >
        #{baseCode,jdbcType=VARCHAR},
      </if>
      <if test="baseValue != null" >
        #{baseValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=DECIMAL},
      </if>
      <if test="createName != null" >
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=DECIMAL},
      </if>
      <if test="updateName != null" >
        #{updateName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select resultType="java.lang.Integer" id="countByExample" parameterType="com.dlz.commbiz.dict.model.BaseSetCriteria">
    select count(*) from T_B_BASE_SET
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_B_BASE_SET
    <set >
      <if test="record.baseCode != null" >
        BASE_CODE = #{record.baseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.baseValue != null" >
        BASE_VALUE = #{record.baseValue,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null" >
        CREATE_ID = #{record.createId,jdbcType=DECIMAL},
      </if>
      <if test="record.createName != null" >
        CREATE_NAME = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null" >
        UPDATE_ID = #{record.updateId,jdbcType=DECIMAL},
      </if>
      <if test="record.updateName != null" >
        UPDATE_NAME = #{record.updateName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_B_BASE_SET
    set BASE_CODE = #{record.baseCode,jdbcType=VARCHAR},
      BASE_VALUE = #{record.baseValue,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_ID = #{record.createId,jdbcType=DECIMAL},
      CREATE_NAME = #{record.createName,jdbcType=VARCHAR},
      REMARKS = #{record.remarks,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_ID = #{record.updateId,jdbcType=DECIMAL},
      UPDATE_NAME = #{record.updateName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlz.commbiz.dict.model.BaseSet" >
    update T_B_BASE_SET
    <set >
      <if test="baseValue != null" >
        BASE_VALUE = #{baseValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        CREATE_ID = #{createId,jdbcType=DECIMAL},
      </if>
      <if test="createName != null" >
        CREATE_NAME = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        REMARKS = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        UPDATE_ID = #{updateId,jdbcType=DECIMAL},
      </if>
      <if test="updateName != null" >
        UPDATE_NAME = #{updateName,jdbcType=VARCHAR},
      </if>
    </set>
    where BASE_CODE = #{baseCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlz.commbiz.dict.model.BaseSet" >
    update T_B_BASE_SET
    set BASE_VALUE = #{baseValue,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_ID = #{createId,jdbcType=DECIMAL},
      CREATE_NAME = #{createName,jdbcType=VARCHAR},
      REMARKS = #{remarks,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_ID = #{updateId,jdbcType=DECIMAL},
      UPDATE_NAME = #{updateName,jdbcType=VARCHAR}
    where BASE_CODE = #{baseCode,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
</mapper>